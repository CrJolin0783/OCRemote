@page "/"
@using System.Timers
@using System.Numerics
@using System.Text.Json
@using Humanizer
@using System.Globalization
@using Humanizer.Localisation
@implements IDisposable
<PageTitle>Index</PageTitle>

<h1>G T N H</h1>

<div style="white-space: pre-line; line-height: 120%">@energyStatus</div>

@code
{
    Timer timer = new Timer(1000);
    string energyStatus = "";

    protected override async Task OnInitializedAsync()
    {
        timer.Elapsed += async (s, e) =>
        {
            var request = JsonDocument.Parse(await RemoteManager.Request("return getEnergyStatus()")).RootElement.EnumerateArray().Select(x => x.GetString()).ToArray();


            var used = Normalize(request[1]);
            var total = Normalize(request[2]);
            var avgin = Normalize(request[6]);
            var avgout = Normalize(request[7]);
            var uv = 524288;
            var t = ((total) - (used)) / (avgin - avgout) / 20;
            TimeSpan ts = TimeSpan.Zero;
            bool failed = false;
            try
            {
                ts = TimeSpan.FromSeconds((double) t);
            }
            catch (Exception e1)
            {
                failed = true;
            }

            energyStatus = $"存储：{used:N0} EU\n总存：{total:N0} EU\n5 秒内平均输入： {avgin:N0} EU/t ({avgin / uv} A UV)\n5 秒内平均输出：{avgout:N0} EU/t ({avgout / uv} A UV)\n" +
                           $"需要 {(failed ? ((double)(t / 60 / 60) / 24.0).ToString("F1") + " 天" : ts.Humanize(culture: new CultureInfo("zh-Hans"), maxUnit: TimeUnit.Month, minUnit: TimeUnit.Second))} 就能填满";

            InvokeAsync(StateHasChanged);
        };
        timer.Start();
    }


    BigInteger Normalize(string s)
    {
        var fi = s.SkipWhile(c => !char.IsNumber(c));
        var l = new List<char>();
        foreach (var c in fi)
        {
            if (char.IsNumber(c))
            {
                l.Add(c);
            } 
            else if (c != ',')
            {
                break;
            }
        }
        var s1 = new string(l.ToArray());
        return BigInteger.Parse(s1);
    }

    public void Dispose()
    {
        timer.Dispose();
    }
}
